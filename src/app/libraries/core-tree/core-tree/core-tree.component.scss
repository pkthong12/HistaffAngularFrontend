.core-tree-container {

    --background: white;
    --min-height: 500px;

    --card-width: 200px;
    --card-height: 70px;
    --card-border-size: 3px;
    --card-border-color: #358ccb;
    --card-border-radius: 10px;
    --card-background: white;
    --card-h-margin: 25px;
    --card-padding: 5px;
    --tier-block-indent: 40px;

    --connecting-line-v-padding: 24px;
    --lonely-children-v-spacing: 12px;
    --block-horizontal-spacing: 24px;

    --line-size: 5px;
    --line-color: gray;
    --line-conner-border-radius: 10px;

    /*
        To be calculated on ngOnInit:
        If --line-conner-border-radius < --line-size Then
            --lonely-children-item-before-height = --line-size
        Else
            --lonely-children-item-before-height = --line-conner-border-radius
        End If
    */
    --lonely-children-item-before-height: 0px;

    --node-size: 11px;
    --node-border-size: 3px;
    --node-border-color: white;

    background: var(--background);

    input[type="checkbox"] {
        display: none;
    }

    .scroll-container {

        background: var(--background);
        overflow-x: auto;
        min-height: var(--min-height);

        * {
            box-sizing: border-box;
        }

        .tree {
            span {

                a,
                section,
                object {
                    display: block;
                    width: 100%;
                    height: calc(var(--card-height) - var(--card-border-size) * 2);
                    height: -moz-calc(var(--card-height) - var(--card-border-size) * 2);
                    height: -webkit-calc(var(--card-height) - var(--card-border-size) * 2);
                    padding: 0 !important;
                    margin: 0 !important;
                }
            }

            object>div {
                cursor: pointer;
                display: flex;
                align-items: center;
                justify-content: flex-start;
                width: 100%;
                height: calc(var(--card-height) - var(--card-border-size) * 2);
                height: -moz-calc(var(--card-height) - var(--card-border-size) * 2);
                height: -webkit-calc(var(--card-height) - var(--card-border-size) * 2);
            }
        }

        .tree,
        .tree ul,
        .tree li {
            list-style: none;
            margin: 0;
            padding: 0;
            position: relative;
        }

        .tree {
            margin: 0 0 1em;
            text-align: center;
        }

        .tree,
        .tree ul {
            display: table;
        }

        .tree ul {
            width: 100%;
        }

        .tree li {
            display: table-cell;
            padding: var(--connecting-line-v-padding) 0px 0px 0px;
            vertical-align: top;
            border: none;
        }

        // the line above li sibling items - general
        .tree li:before {
            content: "";
            display: inline-block;
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: var(--connecting-line-v-padding);
            border-top: solid var(--line-size) var(--line-color);
        }

        // the line above li sibling items - the most left item - left border added
        .tree li:first-child:before {
            left: calc(50% - var(--line-size) / 2);
            left: -moz-calc(50% - var(--line-size) / 2);
            left: -webkit-calc(50% - var(--line-size) / 2);
            border-left: solid var(--line-size) var(--line-color);
            border-top-left-radius: var(--line-conner-border-radius);
        }

        // the line above li sibling items - the most right item - right border added
        .tree li:last-child:before {
            right: calc(50% - var(--line-size) / 2);
            right: -moz-calc(50% - var(--line-size) / 2);
            right: -webkit-calc(50% - var(--line-size) / 2);
            border-right: solid var(--line-size) var(--line-color);
            border-top-right-radius: var(--line-conner-border-radius);
        }

        // if current li is the only child => hide border-right to bypass double-line defect
        .tree li:only-child:before {
            border-right: none;
            border-radius: 0;
        }

        // the line bellow parent >span. Only when parrent li has children
        .tree li.has-children>span::before {
            content: "";
            display: inline-block;
            position: absolute;
            top: calc(100% + var(--card-border-size));
            top: -moz-calc(100% + var(--card-border-size));
            top: -webkit-calc(100% + var(--card-border-size));
            left: calc(50% - var(--line-size) / 2);
            left: -moz-calc(50% - var(--line-size) / 2);
            left: -webkit-calc(50% - var(--line-size) / 2);
            height: var(--connecting-line-v-padding);
            border-left: solid var(--line-size) var(--line-color);
        }

        // the vertical above middem items
        // we use section:before pseudo class to decorate this because other's may be busy
        .tree li:not(:first-child, :last-child)>span>a>section::before {
            cursor: unset;
            content: "";
            display: inline-block;
            position: absolute;
            top: calc(var(--card-border-size) * -1 + var(--connecting-line-v-padding) * -1 + var(--line-size));
            top: -moz-calc(var(--card-border-size) * -1 + var(--connecting-line-v-padding) * -1 + var(--line-size));
            top: -webkit-calc(var(--card-border-size) * -1 + var(--connecting-line-v-padding) * -1 + var(--line-size));
            left: calc(50% + var(--line-size) / -2);
            left: -moz-calc(50% + var(--line-size) / -2);
            left: -webkit-calc(50% + var(--line-size) / -2);
            height: calc(var(--connecting-line-v-padding) - var(--line-size));
            height: -moz-calc(var(--connecting-line-v-padding) - var(--line-size));
            height: -webkit-calc(var(--connecting-line-v-padding) - var(--line-size));
            border-left: solid var(--line-size) var(--line-color);
        }

        // we do not show vertical line above the root
        .tree>li::before {
            display: none;
        }

        .tree span {
            width: var(--card-width);
            height: var(--card-height);
            border: solid var(--card-border-size) var(--card-border-color);
            border-radius: var(--card-border-radius);
            display: inline-block;
            margin: 0 var(--card-h-margin);
            position: relative;
            margin-bottom: var(--connecting-line-v-padding); // adding space bellow span
            overflow: visible; // do not set it to hidden, otherwise we won't see ::after
        }

        .tree span>a {
            position: relative;
            width: 100%;
        }

        #showNodes:checked {

            &~.tree span>a {

                &::before,
                &::after {
                    content: "";
                    position: absolute;
                    z-index: 1;
                    border: solid var(--node-border-size) var(--node-border-color);
                    width: var(--node-size);
                    height: var(--node-size);
                    background-color: var(--line-color);
                    border-radius: 50%;
                }

                // Input node general
                &::before {
                    top: calc(var(--node-size) / -2 + var(--card-border-size) / -2);
                    top: -moz-calc(var(--node-size) / -2 + var(--card-border-size) / -2);
                    top: -webkit-calc(var(--node-size) / -2 + var(--card-border-size) / -2);
                    left: calc(50% + var(--node-size) / -2);
                    left: -moz-calc(50% + var(--node-size) / -2);
                    left: -webkit-calc(50% + var(--node-size) / -2);
                }

                // Output node general
                &::after {
                    bottom: calc(var(--node-size) / -2 + var(--card-border-size) / -2);
                    bottom: -moz-calc(var(--node-size) / -2 + var(--card-border-size) / -2);
                    bottom: -webkit-calc(var(--node-size) / -2 + var(--card-border-size) / -2);
                    left: calc(50% + var(--node-size) / -2);
                    left: -moz-calc(50% + var(--node-size) / -2);
                    left: -webkit-calc(50% + var(--node-size) / -2);
                }
            }

            // Root items do not have input node
            &~.tree>li>span>a::before {
                display: none;
            }

            // Lonely children do not have output node
            &~.tree li:not(:has(>ul>li))>span>a::after {
                display: none;
            }

            &~#wrapLastLevel:checked~.tree {

                // No-grandchildren have output node from the left side 
                li.has-children-but-no-grandchildren>span>a {
                    &::after {
                        top: calc((var(--card-height) - var(--card-border-size) * 2) / 2 - var(--node-size) / 2);
                        top: -moz-calc((var(--card-height) - var(--card-border-size) * 2) / 2 - var(--node-size) / 2);
                        top: -webkit-calc((var(--card-height) - var(--card-border-size) * 2) / 2 - var(--node-size) / 2);
                        left: calc(var(--node-size) / -2 + var(--card-border-size) / -2);
                        left: -moz-calc(var(--node-size) / -2 + var(--card-border-size) / -2);
                        left: -webkit-calc(var(--node-size) / -2 + var(--card-border-size) / -2);
                    }
                }

                // Lonely children have input node from the left side
                li.has-children-but-no-grandchildren {
                    & ul>li>span>a::before {
                        top: calc((var(--card-height) - var(--card-border-size) * 2) / 2 - var(--node-size) / 2);
                        top: -moz-calc((var(--card-height) - var(--card-border-size) * 2) / 2 - var(--node-size) / 2);
                        top: -webkit-calc((var(--card-height) - var(--card-border-size) * 2) / 2 - var(--node-size) / 2);
                        left: calc(var(--node-size) / -2 + var(--card-border-size) / -2);
                        left: -moz-calc(var(--node-size) / -2 + var(--card-border-size) / -2);
                        left: -webkit-calc(var(--node-size) / -2 + var(--card-border-size) / -2);
                    }
                }

            }
        }

        /* wrapLastLevel STYLE */
        /* ===================================*/

        #showCells:checked {
            &~.tree li {
                border: dotted 1px rgb(216, 198, 198); //(for debugging)
            }
        }

        #wrapLastLevel:checked {

            &~.tree {

                ul:has(>li.has-children-but-no-grandchildren) {
                    display: block;
                }

                & li.has-children-but-no-grandchildren>ul>li:not(:first-child, :last-child)>span>a>section::before {
                    display: none;
                }


                // No-grandchildren item left-line decoration
                li.has-children-but-no-grandchildren {
                    position: relative;

                    &::after {
                        content: "";
                        display: block;
                        position: absolute;
                        top: calc(var(--connecting-line-v-padding) + var(--card-height) / 2 - var(--line-size) / 2);
                        top: -moz-calc(var(--connecting-line-v-padding) + var(--card-height) / 2 - var(--line-size) / 2);
                        top: -webkit-calc(var(--connecting-line-v-padding) + var(--card-height) / 2 - var(--line-size) / 2);
                        left: calc(var(--card-h-margin) / 2);
                        left: -moz-calc(var(--card-h-margin) / 2);
                        left: -webkit-calc(var(--card-h-margin) / 2);
                        width: calc(var(--card-h-margin) / 2);
                        width: -moz-calc(var(--card-h-margin) / 2);
                        width: -webkit-calc(var(--card-h-margin) / 2);
                        height: calc(var(--card-height) + var(--connecting-line-v-padding) + var(--line-size) - var(--lonely-children-item-before-height));
                        height: -moz-calc(var(--card-height) + var(--connecting-line-v-padding) + var(--line-size) - var(--lonely-children-item-before-height));
                        height: -webkit-calc(var(--card-height) + var(--connecting-line-v-padding) + var(--line-size) - var(--lonely-children-item-before-height));

                        border-top: solid var(--line-size) var(--line-color);
                        border-left: solid var(--line-size) var(--line-color);
                        border-top-left-radius: var(--line-conner-border-radius);
                    }
                }

                // Lonely children item left-line decoration
                li.has-children-but-no-grandchildren>ul>li {
                    display: block;
                    padding-top: 0;

                    &::before,
                    &::after {
                        content: "";
                        display: block;
                        position: absolute;
                        left: calc(var(--card-h-margin) / 2);
                        left: -moz-calc(var(--card-h-margin) / 2);
                        left: -webkit-calc(var(--card-h-margin) / 2);
                        width: calc(var(--card-h-margin) / 2 + var(--tier-block-indent));
                        width: -moz-calc(var(--card-h-margin) / 2 + var(--tier-block-indent));
                        width: -webkit-calc(var(--card-h-margin) / 2 + var(--tier-block-indent));
                        border-top-left-radius: 0;
                    }

                    // Based on li - Meats the previous
                    &::before {
                        top: calc(var(--card-height) / 2 + var(--line-size) / 2 - var(--lonely-children-item-before-height));
                        top: -moz-calc(var(--card-height) / 2 + var(--line-size) / 2 - var(--lonely-children-item-before-height));
                        top: -webkit-calc(var(--card-height) / 2 + var(--line-size) / 2 - var(--lonely-children-item-before-height));
                        height: var(--lonely-children-item-before-height);
                        border-left: solid var(--line-size) var(--line-color);
                        border-top: none;
                        border-bottom: solid var(--line-size) var(--line-color);
                    }

                    &::after {
                        top: calc(var(--card-height) / 2 - var(--line-size) / 2);
                        top: -moz-calc(var(--card-height) / 2 - var(--line-size) / 2);
                        top: -webkit-calc(var(--card-height) / 2 - var(--line-size) / 2);
                        height: calc(var(--card-height) + var(--lonely-children-v-spacing) + var(--line-size) - var(--lonely-children-item-before-height));
                        height: -moz-calc(var(--card-height) + var(--lonely-children-v-spacing) + var(--line-size) - var(--lonely-children-item-before-height));
                        height: -webkit-calc(var(--card-height) + var(--lonely-children-v-spacing) + var(--line-size) - var(--lonely-children-item-before-height));
                        width: calc(var(--card-h-margin) / 2 + var(--tier-block-indent));
                        width: -moz-calc(var(--card-h-margin) / 2 + var(--tier-block-indent));
                        width: -webkit-calc(var(--card-h-margin) / 2 + var(--tier-block-indent));
                        border-top: none;
                        border-bottom: none;
                        border-left: solid var(--line-size) var(--line-color);
                    }

                    &:last-child::before {
                        border-bottom-left-radius: var(--line-conner-border-radius);
                        border-top: none;
                        border-right: none;
                        border-top-right-radius: 0;
                    }

                    &:last-child::after {
                        display: none;
                    }
                }

                // Lonlely children have spacing between each other smaller than their ancestors
                li.has-children-but-no-grandchildren>ul>li>span {
                    margin-bottom: var(--lonely-children-v-spacing);
                    width: calc(var(--card-width) - var(--tier-block-indent));
                    width: -moz-calc(var(--card-width) - var(--tier-block-indent));
                    width: -webkit-calc(var(--card-width) - var(--tier-block-indent));
                    margin-left: calc(var(--card-h-margin) + var(--tier-block-indent));
                    margin-left: -moz-calc(var(--card-h-margin) + var(--tier-block-indent));
                    margin-left: -webkit-calc(var(--card-h-margin) + var(--tier-block-indent));
                }

                li.has-children-but-no-grandchildren>span {

                    &::before {
                        display: none;
                    }
                }

            }

        }

    }

    /*
        MOBILE MODE ================================================================================
    */

    @media (max-width: 576px) {

        [data-tier="1"] {
            --tier: 1;
        }

        [data-tier="2"] {
            --tier: 2;
        }

        [data-tier="3"] {
            --tier: 3;
        }

        [data-tier="4"] {
            --tier: 4;
        }

        [data-tier="5"] {
            --tier: 5;
        }

        [data-tier="6"] {
            --tier: 6;
        }

        [data-tier="7"] {
            --tier: 7;
        }

        [data-tier="8"] {
            --tier: 8;
        }

        [data-tier="9"] {
            --tier: 9;
        }

        [data-tier="10"] {
            --tier: 10;
        }

        [data-tier="11"] {
            --tier: 11;
        }

        [data-tier="12"] {
            --tier: 12;
        }

        [data-tier="13"] {
            --tier: 13;
        }

        [data-tier="14"] {
            --tier: 14;
        }

        [data-tier="15"] {
            --tier: 15;
        }

        [data-tier="16"] {
            --tier: 16;
        }

        [data-tier="17"] {
            --tier: 17;
        }

        [data-tier="18"] {
            --tier: 18;
        }

        [data-tier="19"] {
            --tier: 19;
        }

        [data-tier="20"] {
            --tier: 20;
        }

        [data-tier="21"] {
            --tier: 21;
        }

        [data-tier="22"] {
            --tier: 22;
        }

        [data-tier="23"] {
            --tier: 23;
        }

        [data-tier="24"] {
            --tier: 24;
        }

        .scroll-container {
            overflow-x: unset;
        }

        .tree,
        .tree ul,
        .tree li,
        .tree ul>li {
            display: block !important;
            padding: 0 !important;
        }

        .tree li>span,
        .tree ul>li>span {
            width: calc(100% - var(--card-h-margin) * 2 - var(--tier-block-indent) * (var(--tier) - 1)) !important;
            width: -moz-calc(100% - var(--card-h-margin) * 2 - var(--tier-block-indent) * (var(--tier) - 1)) !important;
            width: -webkit-calc(100% - var(--card-h-margin) * 2 - var(--tier-block-indent) * (var(--tier) - 1)) !important;
            margin-left: calc(var(--card-h-margin) + var(--tier-block-indent) * (var(--tier) - 1)) !important;
            margin-left: -moz-calc(var(--card-h-margin) + var(--tier-block-indent) * (var(--tier) - 1)) !important;
            margin-left: -webkit-calc(var(--card-h-margin) + var(--tier-block-indent) * (var(--tier) - 1)) !important;
        }

        .tree ul>li:has(>ul>li)>ul>li:last-child>span {
            margin-bottom: var(--connecting-line-v-padding) !important;
        }

        .scroll-container #showNodes:checked~.tree span>a:before,
        .scroll-container #showNodes:checked~.tree span>a:after {
            z-index: 2;
        }

        // MOBILE - li left-line decoration GENERAL
        ul>li {

            padding: 0 !important;

            &>span>a>section::before {
                display: none !important;
            }

            &::before {
                top: calc(var(--card-height) / 2 - var(--line-size) / 2) !important;
                top: -moz-calc(var(--card-height) / 2 - var(--line-size) / 2) !important;
                top: -webkit-calc(var(--card-height) / 2 - var(--line-size) / 2) !important;
                left: calc(var(--card-h-margin) / 2 + (var(--tier) - 2) * var(--tier-block-indent)) !important;
                left: -moz-calc(var(--card-h-margin) / 2 + (var(--tier) - 2) * var(--tier-block-indent)) !important;
                left: -webkit-calc(var(--card-h-margin) / 2 + (var(--tier) - 2) * var(--tier-block-indent)) !important;
                width: calc(var(--card-h-margin) / 2 + var(--tier-block-indent)) !important;
                width: -moz-calc(var(--card-h-margin) / 2 + var(--tier-block-indent)) !important;
                width: -webkit-calc(var(--card-h-margin) / 2 + var(--tier-block-indent)) !important;
                height: var(--line-size) !important;
                border-radius: 0 !important;
                z-index: 3; // reamain eraser => z-index = 2
            }


            /* to be bound to span>a::after*/
            /* here is cleaner area */
            &:last-child:not(:first-child),
            &:only-child {
                &::before {
                    display: inline-block;
                    position: absolute;
                    z-index: 2 !important;
                    top: calc((var(--card-height) - var(--card-border-size) * 2) / 2 - var(--lonely-children-item-before-height) + var(--line-size) / 2 + var(--card-border-size)) !important;
                    top: -moz-calc((var(--card-height) - var(--card-border-size) * 2) / 2 - var(--lonely-children-item-before-height) + var(--line-size) / 2 + var(--card-border-size)) !important;
                    top: -webkit-calc((var(--card-height) - var(--card-border-size) * 2) / 2 - var(--lonely-children-item-before-height) + var(--line-size) / 2 + var(--card-border-size)) !important;
                    left: calc((var(--tier) - 2) * var(--tier-block-indent) + var(--card-h-margin)/2) !important;
                    left: -moz-calc((var(--tier) - 2) * var(--tier-block-indent) + var(--card-h-margin)/2) !important;
                    left: -webkit-calc((var(--tier) - 2) * var(--tier-block-indent) + var(--card-h-margin)/2) !important;
                    width: var(--line-size) !important;
                    height: calc(100% - var(--line-size) - var(--card-border-size) - var(--line-size) / 2) !important;
                    height: -moz-calc(100% - var(--line-size) - var(--card-border-size) - var(--line-size) / 2) !important;
                    height: -webkit-calc(100% - var(--line-size) - var(--card-border-size) - var(--line-size) / 2) !important;
                    border: none !important;
                    background-color: var(--background) !important;
                }

            }

            /* Refactor */
            /* finishing curve */
            &:last-child:not([data-tier="1"])>span>a::after {
                position: absolute !important;
                display: inline-block !important;

                top: calc((var(--card-height) - var(--card-border-size) * 2) / 2 - var(--lonely-children-item-before-height) + var(--line-size) / 2) !important;
                top: -moz-calc((var(--card-height) - var(--card-border-size) * 2) / 2 - var(--lonely-children-item-before-height) + var(--line-size) / 2) !important;
                top: -webkit-calc((var(--card-height) - var(--card-border-size) * 2) / 2 - var(--lonely-children-item-before-height) + var(--line-size) / 2) !important;

                left: calc(var(--card-h-margin) / -2 + var(--tier-block-indent) * -1 + var(--card-border-size) * -1) !important;
                left: -moz-calc(var(--card-h-margin) / -2 + var(--tier-block-indent) * -1 + var(--card-border-size) * -1) !important;
                left: -webkit-calc(var(--card-h-margin) / -2 + var(--tier-block-indent) * -1 + var(--card-border-size) * -1) !important;

                width: calc(var(--card-h-margin) / 2 + var(--tier-block-indent)) !important;
                width: -moz-calc(var(--card-h-margin) / 2 + var(--tier-block-indent)) !important;
                width: -webkit-calc(var(--card-h-margin) / 2 + var(--tier-block-indent)) !important;

                height: var(--lonely-children-item-before-height) !important;

                border-top: none !important;
                border-right: none !important;
                border-bottom: solid var(--line-size) !important;
                border-left: solid var(--line-size) !important;
                border-radius: 0 !important;
                border-bottom-left-radius: var(--line-conner-border-radius) !important;
                color: var(--line-color);
                background-color: unset !important;

            }

            &.has-children {

                &::after {
                    content: "";
                    display: block;
                    position: absolute;
                    top: calc(var(--connecting-line-v-padding) * 0 + var(--card-height) / 2 - var(--line-size) / 2) !important;
                    top: -moz-calc(var(--connecting-line-v-padding) * 0 + var(--card-height) / 2 - var(--line-size) / 2) !important;
                    top: -webkit-calc(var(--connecting-line-v-padding) * 0 + var(--card-height) / 2 - var(--line-size) / 2) !important;
                    left: calc(var(--card-h-margin) / 2 + (var(--tier) - 1) * var(--tier-block-indent)) !important;
                    left: -moz-calc(var(--card-h-margin) / 2 + (var(--tier) - 1) * var(--tier-block-indent)) !important;
                    left: -webkit-calc(var(--card-h-margin) / 2 + (var(--tier) - 1) * var(--tier-block-indent)) !important;
                    width: calc(var(--card-h-margin) / 2) !important;
                    width: -moz-calc(var(--card-h-margin) / 2) !important;
                    width: -webkit-calc(var(--card-h-margin) / 2) !important;

                    height: calc(100% - var(--card-height) - var(--lonely-children-v-spacing) - var(--lonely-children-item-before-height) + var(--line-size)) !important;
                    height: -moz-calc(100% - var(--card-height) - var(--lonely-children-v-spacing) - var(--lonely-children-item-before-height) + var(--line-size)) !important;
                    height: -webkit-calc(100% - var(--card-height) - var(--lonely-children-v-spacing) - var(--lonely-children-item-before-height) + var(--line-size)) !important;

                    border-top: solid var(--line-size) var(--line-color) !important;
                    border-left: solid var(--line-size) var(--line-color) !important;
                    border-top-left-radius: var(--line-conner-border-radius);
                }

                &>span::before {
                    display: none !important;
                }

                &>span>a>section::before {
                    display: none !important;
                }
            }
        }

        #showNodes:checked {

            // In mobile mode Root items does have input node and does not have left line
            &~.tree>li>span>a::before {
                display: block !important;
            }

            &~.tree span>a {

                // Input node general
                &::before {
                    z-index: 3 !important;
                    top: calc(var(--card-height) / 2 - var(--card-border-size) - var(--node-size) / 2) !important;
                    top: -moz-calc(var(--card-height) / 2 - var(--card-border-size) - var(--node-size) / 2) !important;
                    top: -webkit-calc(var(--card-height) / 2 - var(--card-border-size) - var(--node-size) / 2) !important;
                    left: calc(var(--node-size) / -2 + var(--card-border-size) / -2) !important;
                    left: -moz-calc(var(--node-size) / -2 + var(--card-border-size) / -2) !important;
                    left: -webkit-calc(var(--node-size) / -2 + var(--card-border-size) / -2) !important;
                }

                // Output node general
                // In mobile mode there is only one node at :before
                &::after {
                    display: none;
                }
            }
        }

    }

}